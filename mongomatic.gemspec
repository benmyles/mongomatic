# Generated by jeweler
# DO NOT EDIT THIS FILE DIRECTLY
# Instead, edit Jeweler::Tasks in Rakefile, and run 'rake gemspec'
# -*- encoding: utf-8 -*-

Gem::Specification.new do |s|
  s.name = %q{mongomatic}
  s.version = "0.8.1.1"

  s.required_rubygems_version = Gem::Requirement.new(">= 0") if s.respond_to? :required_rubygems_version=
  s.authors = ["Ben Myles", "Justin Smestad"]
  s.date = %q{2011-04-06}
  s.description = %q{Mongomatic is a modular Ruby object mapper for Mongo}
  s.email = %q{ben.myles@gmail.com}
  s.extra_rdoc_files = [
    "LICENSE",
    "README.rdoc"
  ]
  s.files = [
    "CHANGELOG",
    "Gemfile",
    "Gemfile.lock",
    "LICENSE",
    "README.rdoc",
    "Rakefile",
    "VERSION",
    "lib/mongomatic.rb",
    "lib/mongomatic/active_model_compliancy.rb",
    "lib/mongomatic/base.rb",
    "lib/mongomatic/cursor.rb",
    "lib/mongomatic/errors.rb",
    "lib/mongomatic/exceptions.rb",
    "lib/mongomatic/expectations.rb",
    "lib/mongomatic/expectations/be_reference.rb",
    "lib/mongomatic/expectations/expected.rb",
    "lib/mongomatic/expectations/is_number.rb",
    "lib/mongomatic/expectations/match.rb",
    "lib/mongomatic/expectations/of_length.rb",
    "lib/mongomatic/expectations/present.rb",
    "lib/mongomatic/m_hash.rb",
    "lib/mongomatic/modifiers.rb",
    "lib/mongomatic/observable.rb",
    "lib/mongomatic/observer.rb",
    "lib/mongomatic/transaction_lock.rb",
    "lib/mongomatic/type_converters.rb",
    "lib/mongomatic/typed_fields.rb",
    "lib/mongomatic/util.rb",
    "mongomatic.gemspec",
    "test/helper.rb",
    "test/test_exceptions.rb",
    "test/test_find.rb",
    "test/test_misc.rb",
    "test/test_modifiers.rb",
    "test/test_observable.rb",
    "test/test_persistence.rb",
    "test/test_transaction_lock.rb",
    "test/test_typed_fields.rb",
    "test/test_validations.rb"
  ]
  s.homepage = %q{http://mongomatic.com/}
  s.licenses = ["MIT"]
  s.require_paths = ["lib"]
  s.rubygems_version = %q{1.7.2}
  s.summary = %q{Mongomatic is a modular Ruby object mapper for Mongo}
  s.test_files = [
    "test/helper.rb",
    "test/test_exceptions.rb",
    "test/test_find.rb",
    "test/test_misc.rb",
    "test/test_modifiers.rb",
    "test/test_observable.rb",
    "test/test_persistence.rb",
    "test/test_transaction_lock.rb",
    "test/test_typed_fields.rb",
    "test/test_validations.rb"
  ]

  if s.respond_to? :specification_version then
    s.specification_version = 3

    if Gem::Version.new(Gem::VERSION) >= Gem::Version.new('1.2.0') then
      s.add_runtime_dependency(%q<activesupport>, [">= 3.0.0"])
      s.add_runtime_dependency(%q<mongo>, [">= 1.2.4"])
      s.add_runtime_dependency(%q<bson>, [">= 1.2.4"])
      s.add_runtime_dependency(%q<i18n>, [">= 0.5.0"])
      s.add_development_dependency(%q<minitest>, [">= 0"])
      s.add_development_dependency(%q<bundler>, ["~> 1.0.11"])
      s.add_development_dependency(%q<jeweler>, ["~> 1.5.2"])
      s.add_development_dependency(%q<rcov>, [">= 0"])
      s.add_development_dependency(%q<ruby-debug19>, [">= 0"])
      s.add_development_dependency(%q<yard>, ["~> 0.6.5"])
    else
      s.add_dependency(%q<activesupport>, [">= 3.0.0"])
      s.add_dependency(%q<mongo>, [">= 1.2.4"])
      s.add_dependency(%q<bson>, [">= 1.2.4"])
      s.add_dependency(%q<i18n>, [">= 0.5.0"])
      s.add_dependency(%q<minitest>, [">= 0"])
      s.add_dependency(%q<bundler>, ["~> 1.0.11"])
      s.add_dependency(%q<jeweler>, ["~> 1.5.2"])
      s.add_dependency(%q<rcov>, [">= 0"])
      s.add_dependency(%q<ruby-debug19>, [">= 0"])
      s.add_dependency(%q<yard>, ["~> 0.6.5"])
    end
  else
    s.add_dependency(%q<activesupport>, [">= 3.0.0"])
    s.add_dependency(%q<mongo>, [">= 1.2.4"])
    s.add_dependency(%q<bson>, [">= 1.2.4"])
    s.add_dependency(%q<i18n>, [">= 0.5.0"])
    s.add_dependency(%q<minitest>, [">= 0"])
    s.add_dependency(%q<bundler>, ["~> 1.0.11"])
    s.add_dependency(%q<jeweler>, ["~> 1.5.2"])
    s.add_dependency(%q<rcov>, [">= 0"])
    s.add_dependency(%q<ruby-debug19>, [">= 0"])
    s.add_dependency(%q<yard>, ["~> 0.6.5"])
  end
end

